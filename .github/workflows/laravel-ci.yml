name: Laravel CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: QAZqazWSXwsx12()
          MYSQL_DATABASE: laravelportfolio
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install Composer dependencies (including dev)
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Install PHPUnit (if missing)
        run: composer require --dev phpunit/phpunit --with-all-dependencies

      - name: Copy .env.testing to .env
        run: cp .env.testing .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run Laravel tests
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
      - name: Deploy via SSH to AWS Lightsail
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd /var/www/laravelapi
            git config --global --add safe.directory /var/www/laravelapi
            sudo chown -R $USER:$USER /var/www/laravelapi
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan config:clear
            php artisan cache:clear
            php artisan route:cache
            php artisan route:clear
            php artisan view:cache
            php artisan optimize:clear
            sudo chmod -R 775 storage
            sudo chmod -R 775 bootstrap/cache
            sudo chown -R www-data:www-data storage
            sudo chown -R www-data:www-data bootstrap/cache